import React, { useState } from 'react';
import Dialog from '@mui/material/Dialog';
import DialogActions from '@mui/material/DialogActions';
import DialogContent from '@mui/material/DialogContent';
import DialogTitle from '@mui/material/DialogTitle';
import Button from '@mui/material/Button';
import TextField from '@mui/material/TextField';
import Stack from '@mui/material/Stack';
import Select from '@mui/material/Select';
import {FormControl, InputLabel } from '@mui/material';
import InputAdornment from '@mui/material/InputAdornment';

function EditTraining(props) {
  const [open, setOpen] = useState(false);
  const [training, setTraining] = useState({
    trainingDateTime: '', cost: '', complexFacility: ''
  });
    
  const handleClickOpen = () => {
    setTraining({
      trainingDateTime: props.data.row.trainingDateTime,
      cost: props.data.row.cost,
      complexFacility: props.data.row.complexFacility,
     })      
    setOpen(true);
  }

  const handleClose = () => {
    setOpen(false);
  };
  
  const handleChange = (event) => {
    setTraining({...training, 
      [event.target.name]: event.target.value});
  }
 
  const handleSave = () => {
    props.updateTraining(training, props.data.id);
    handleClose();
  }

  return(
    <div>
      <button className='shine-button' variant="contained" onClick={handleClickOpen}>
        Обновить
      </button>
      <Dialog open={open} onClose={handleClose}>
          <DialogTitle className='dialog'>Обновление информации о тренировке</DialogTitle>
          <DialogContent className='dialog'>
        <Stack spacing={2} mt={1}>
        <TextField type='datetime-local' label="Время проведения" name="trainingDateTime" 
            variant="standard" value={training.trainingDateTime} 
            onChange={handleChange} InputProps={{
              inputProps: {
                inputMode: 'numeric',
              },
              startAdornment: (
                <InputAdornment position="start"> </InputAdornment>
              ),
            }}/>
           <TextField label="Стоимость (бел.руб.)" name="cost"
            variant="standard" value={training.cost} 
            onChange={handleChange}/>
            <FormControl fullWidth>
            <InputLabel>Место проведения</InputLabel>
             <Select
              name="complexFacility"
              value={training.complexFacility}
              autoFocus variant="standard"
              label="Место проведения"
              onChange={handleChange}>
            </Select>
            </FormControl>
        </Stack>
      </DialogContent>
      <DialogActions>
         <Button onClick={handleClose}>Отмена</Button>
         <Button onClick={handleSave}>Сохранить</Button>
      </DialogActions>
        </Dialog>            
    </div>
  );  
}

export default EditTraining;
